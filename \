import { useMemo } from "react";
import { items } from "../utils/constants";
import { getLastCip } from "../utils/getData";

export default function Violations({ data }) {
  const violations = useMemo(() => {
    const vio = [];
    const arr = items.map((item) => {
      const list = data.filter((i) => {
        return i.item === item;
      });
      return list;
    });

    const lastCIP = getLastCip();
    console.log(lastCIP);

    arr.forEach((item) => {
      item.forEach((action, i) => {
        if (
          !item[i - 1] &&
          action.type === "CIP" &&
          (new Date() - new Date(action.date)) / 1000 / 60 / 60 > 72
        ) {
          vio.push({
            warning:
              action.item + " has not been CIP'd within the past 72 hours",
            id: action.id,
          });
        }
      });
    });
    return vio;
  }, [data]);
  return (
    <ul className="flex flex-col gap-2 p-4">
      {violations.map((v) => (
        <li key={v.id} className="p-2 rounded-md bg-orange-500 text-slate-100">
          <h5 className="font-bold text-lg">Warning!</h5>
          {v.warning}
        </li>
      ))}
    </ul>
  );
}
